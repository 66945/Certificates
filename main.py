import csv
from docs import Document
from httptest import HandleRequests
import httptest

import os

"""
Gets every name from a csv file and loads it into a dictionary.
The csv file should be formatted as follows:

Last Name,First Name,Middle Name

The csv file should also have the above, or another set of headers, as the first line.

The dictionary structure is as follows:

'Full Name' : []

The empty array will later be filled with the awards that person has in getAwards()
"""
def getNames(string, isFile):
    names = {}

    #with open(path) as file:
    csvreader = None

    if isFile:
        csvreader = csv.reader(open(string))
    else:
        lines = string.split('\n')
        csvreader = csv.reader(lines)

    next(csvreader)

    for row in csvreader:
        if len(row) >= 2:
            name = row[1] + ' ' + row[0]
            names[name] = []
    
    return names

"""
Loads awards from a csv file into a dictionary of names generated by getNames().
The csv file should be formatted as follows:

Timestamp,Student name F/L,Student Name L/F,Award

The csv file should also have the above, or another set of headers, as the first line.

The dictionary structure is as follows:

'Full Name' : ['list', 'of', 'awards']
"""
def getAwards(names, string, isFile):
    awards = names

    #with open(path) as file:
    csvreader = None

    if isFile:
        csvreader = csv.reader(open(string))
    else:
        lines = string.split('\n')
        csvreader = csv.reader(lines)

    next(csvreader)

    for row in csvreader:
        if len(row) >= 4:
            name = row[1]
            award = row[3]

            if not award in awards[name]:
                awards[name].append(award)
    
    return awards

"""
Writes the names/awards generated by getNames() and getAwards() into a word document

inPath is a path to a format word file. This should be formatted how you want the
certificates to work, and have a sufficient number of pages for all the students.

outPath is a path to the final file. This will contain completed certificates.
"""
def writeAwards(awards, inPath, outPath):
    doc = Document(inPath, outPath)

    for name in awards:
        print(name)

        doc.replaceAttrib('name', name)

        i = 0
        while i < 10:
            if i < len(awards[name]):
                doc.replaceAttrib('award', awards[name][i])
            else:
                doc.replaceAttrib('award', '')
            
            i += 1
    
    doc.close()

def handleData(self, data):
    names = getNames(data['names'], False)

    awards = getAwards(names, data['awards'], False)
    
    if not os.path.isdir('C:/temp'):
        os.mkdir('C:/temp')

    outputPath = 'C:/temp/final.docx'
    writeAwards(awards, 'input.docx', outputPath)

    print('Done! :)')

def main():
    print(os.getcwd())

    handleRequests = HandleRequests
    handleRequests.handleData = handleData
    httptest.setupServer(httptest.PORT, handleRequests)

"""
    namesPath = input('Enter the Names CSV filepath: ')
    if not namesPath.endswith('.csv'):
        namesPath += '.csv'
    names = getNames(namesPath, True)

    awardsPath = input('Enter the Awards CSV filepath: ')
    if not awardsPath.endswith('.csv'):
        awardsPath += '.csv'
    awards = getAwards(names, awardsPath, True)

    outputPath = input('Enter the final Microsoft Word Document filename: ')
    if not outputPath.endswith('.docx'):
        outputPath += '.docx'
    writeAwards(awards, 'input.docx', outputPath)

    print('Done! :)')
"""

if __name__ == '__main__':
    main()